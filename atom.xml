<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雪地行人</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tonywang1.github.io/"/>
  <updated>2019-10-12T07:46:28.969Z</updated>
  <id>https://tonywang1.github.io/</id>
  
  <author>
    <name>Tony Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>protobuf使用</title>
    <link href="https://tonywang1.github.io/2019/10/12/you_know_pb/"/>
    <id>https://tonywang1.github.io/2019/10/12/you_know_pb/</id>
    <published>2019-10-12T15:41:13.000Z</published>
    <updated>2019-10-12T07:46:28.969Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Protocol-Buffer初识"><a href="#Protocol-Buffer初识" class="headerlink" title="Protocol Buffer初识"></a>Protocol Buffer初识</h1><hr><h2 id="1-什么是protobuf"><a href="#1-什么是protobuf" class="headerlink" title="1.什么是protobuf"></a>1.什么是protobuf</h2><p>google开发的跨语言、跨平台、可扩展的可以序列化的数据结构，像XML一样，但是更小更快，更简单，你可以定义序列化的数据结构，然后用工具生成对应语言的源码，最后可以用各种语言对数据流结构进行读写。</p><h2 id="2-protobuf优势在哪里"><a href="#2-protobuf优势在哪里" class="headerlink" title="2.protobuf优势在哪里"></a>2.protobuf优势在哪里</h2><ul><li>跨语言</li><li>跨平台</li><li>可扩展</li><li>小、快、简单</li></ul><h2 id="3-什么地方使用protobuf"><a href="#3-什么地方使用protobuf" class="headerlink" title="3.什么地方使用protobuf"></a>3.什么地方使用protobuf</h2><ul><li>数据压缩传输</li><li>数据压缩存储、持久化</li></ul><h2 id="4-在java中如何使用protobuf-maven插件可以直接生成java代码"><a href="#4-在java中如何使用protobuf-maven插件可以直接生成java代码" class="headerlink" title="4.在java中如何使用protobuf-maven插件可以直接生成java代码"></a>4.在java中如何使用protobuf-maven插件可以直接生成java代码</h2><ol><li>创建proto目录，并在里面创建bookdress.proto文件-内容如<strong>代码4.1</strong></li><li>maven的xml中添加protobuf文件生成源码的代码-内容如<strong>4.2</strong></li><li>测试写入protobuf的<strong>代码4.3</strong></li><li>测试读取protobuf的<strong>代码4.4</strong><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">代码<span class="number">4.1</span></span><br><span class="line">syntax = <span class="string">"proto2"</span>;</span><br><span class="line"><span class="keyword">package</span> proto;</span><br><span class="line">option java_package = <span class="string">"com.test.proto"</span>;</span><br><span class="line">option java_outer_classname = <span class="string">"AddressBookProtos"</span>;</span><br><span class="line">message Person &#123;</span><br><span class="line">    optional string name = <span class="number">1</span>;</span><br><span class="line">    optional int32 id = <span class="number">2</span>;</span><br><span class="line">    optional string email = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">enum</span> PhoneType &#123;</span><br><span class="line">        MOBILE = <span class="number">0</span>;</span><br><span class="line">        HOME = <span class="number">1</span>;</span><br><span class="line">        WORK = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    message PhoneNumber &#123;</span><br><span class="line">        optional string number = <span class="number">1</span>;</span><br><span class="line">        optional PhoneType type = <span class="number">2</span> [<span class="keyword">default</span> = HOME];</span><br><span class="line">    &#125;</span><br><span class="line">    repeated PhoneNumber phones = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line">message AddressBook &#123;</span><br><span class="line">    repeated Person people = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">代码4.2</span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.protobuf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>protobuf-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">extensions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">extension</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>kr.motd.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>os-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">extension</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.xolstice.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>protobuf-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">goal</span>&gt;</span>test-compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">protocArtifact</span>&gt;</span>com.google.protobuf:protoc:3.4.0:exe:$&#123;os.detected.classifier&#125;<span class="tag">&lt;/<span class="name">protocArtifact</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">代码<span class="number">4.3</span></span><br><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"><span class="keyword">import</span> com.test.proto.AddressBookProtos;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WritePerson</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">final</span>  String addr_book = <span class="string">"addr_book.file"</span>; <span class="comment">// 写入文件的名称</span></span><br><span class="line">    <span class="keyword">static</span> AddressBookProtos.<span class="function">Person <span class="title">PromptForAddress</span><span class="params">(<span class="keyword">int</span> index)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        AddressBookProtos.Person.Builder person = AddressBookProtos.Person.newBuilder();</span><br><span class="line">        person.setId(index);</span><br><span class="line">        person.setName(<span class="string">"proto test "</span> + index);</span><br><span class="line">        person.setEmail(<span class="string">"a"</span>+index+<span class="string">"@b.com"</span>);</span><br><span class="line">        AddressBookProtos.Person.PhoneNumber.Builder phoneNumber = AddressBookProtos.Person.PhoneNumber.newBuilder().setNumber(<span class="string">"110-"</span>+index);</span><br><span class="line">        phoneNumber.setType(AddressBookProtos.Person.PhoneType.HOME);</span><br><span class="line">        person.addPhones(phoneNumber);</span><br><span class="line">        <span class="keyword">return</span> person.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        AddressBookProtos.AddressBook.Builder addressBook = AddressBookProtos.AddressBook.newBuilder();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            addressBook.mergeFrom(<span class="keyword">new</span> FileInputStream(addr_book));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            System.err.println( <span class="string">" File not found.  Creating a new file."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建 address.</span></span><br><span class="line">        addressBook.addPeople(PromptForAddress(<span class="number">1</span>));</span><br><span class="line">        addressBook.addPeople(PromptForAddress(<span class="number">2</span>));</span><br><span class="line">        addressBook.addPeople(PromptForAddress(<span class="number">3</span>));</span><br><span class="line">        <span class="comment">// 保存到文件</span></span><br><span class="line">        FileOutputStream output = <span class="keyword">new</span> FileOutputStream(WritePerson.addr_book);</span><br><span class="line">        addressBook.build().writeTo(output);</span><br><span class="line">        output.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">代码<span class="number">4.4</span></span><br><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"><span class="keyword">import</span> com.test.proto.AddressBookProtos;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadPeople</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print</span><span class="params">(AddressBookProtos.AddressBook addressBook)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (AddressBookProtos.Person person : addressBook.getPeopleList()) &#123;</span><br><span class="line">            System.out.println(<span class="string">"Person ID: "</span> + person.getId());</span><br><span class="line">            System.out.println(<span class="string">"  Name: "</span> + person.getName());</span><br><span class="line">            <span class="keyword">if</span> (person.hasEmail()) &#123;</span><br><span class="line">                System.out.println(<span class="string">"  E-mail address: "</span> + person.getEmail());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (AddressBookProtos.Person.PhoneNumber phoneNumber : person.getPhonesList()) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (phoneNumber.getType()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> MOBILE:</span><br><span class="line">                        System.out.print(<span class="string">"  Mobile phone #: "</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> HOME:</span><br><span class="line">                        System.out.print(<span class="string">"  Home phone #: "</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> WORK:</span><br><span class="line">                        System.out.print(<span class="string">"  Work phone #: "</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">               System.out.println(phoneNumber.getNumber());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        AddressBookProtos.AddressBook addressBook = AddressBookProtos.AddressBook.parseFrom(<span class="keyword">new</span> FileInputStream(WritePerson.addr_book));</span><br><span class="line">        Print(addressBook);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-主要参考"><a href="#5-主要参考" class="headerlink" title="5.主要参考"></a>5.主要参考</h2><ul><li><a href="https://developers.google.com/protocol-buffers/" target="_blank" rel="noopener">ProtoBuf的官方</a></li><li><a href="https://www.xolstice.org/protobuf-maven-plugin/examples/protoc-artifact.html" target="_blank" rel="noopener">ProtoBuf的maven集成插件</a></li><li><a href="https://developers.google.com/protocol-buffers/docs/proto3" target="_blank" rel="noopener">google开发者文档</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Protocol-Buffer初识&quot;&gt;&lt;a href=&quot;#Protocol-Buffer初识&quot; class=&quot;headerlink&quot; title=&quot;Protocol Buffer初识&quot;&gt;&lt;/a&gt;Protocol Buffer初识&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="GRPC" scheme="https://tonywang1.github.io/categories/GRPC/"/>
    
    
      <category term="GRPC" scheme="https://tonywang1.github.io/tags/GRPC/"/>
    
  </entry>
  
  <entry>
    <title>MAVEN插件总览</title>
    <link href="https://tonywang1.github.io/2019/09/18/maven_plugin/"/>
    <id>https://tonywang1.github.io/2019/09/18/maven_plugin/</id>
    <published>2019-09-17T20:28:36.000Z</published>
    <updated>2019-09-24T08:20:50.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maven插件知识总览"><a href="#maven插件知识总览" class="headerlink" title="maven插件知识总览"></a>maven插件知识总览</h1><hr><h2 id="1-对于maven插件的了解"><a href="#1-对于maven插件的了解" class="headerlink" title="1.对于maven插件的了解"></a>1.对于maven插件的了解</h2><p>插件官网： <a href="http://maven.apache.org/plugins/index.html" target="_blank" rel="noopener">http://maven.apache.org/plugins/index.html</a><br> Maven 本质上是一个插件框架，它的核心并不执行任何具体的构建任务，所有这些任务都交给插件来完成。如编译源代码是由<br> maven-compiler-plugin完成的，每个任务阶段对应了一个插件目标（goal），每个插件会有一个或者多个目标，如maven- compiler-plugin的compile目标用来编译位于src/main/java/目录下的主源码，testCompile目标用来编译位于src/test/java/目录下的测试源码 　</p><h2 id="2-常用插件"><a href="#2-常用插件" class="headerlink" title="2.常用插件"></a>2.常用插件</h2><h3 id="1）-maven-antrun-plugin"><a href="#1）-maven-antrun-plugin" class="headerlink" title="1）  maven-antrun-plugin"></a>1）  maven-antrun-plugin</h3><p><a href="http://maven.apache.org/plugins/maven-antrun-plugin/" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-antrun-plugin/</a></p><h3 id="2）-maven-archetype-plugin"><a href="#2）-maven-archetype-plugin" class="headerlink" title="2） maven-archetype-plugin"></a>2） maven-archetype-plugin</h3><p><a href="http://maven.apache.org/archetype/maven-archetype-plugin/" target="_blank" rel="noopener">http://maven.apache.org/archetype/maven-archetype-plugin/</a></p><h3 id="3）-maven-assembly-plugin"><a href="#3）-maven-assembly-plugin" class="headerlink" title="3）  maven-assembly-plugin"></a>3）  maven-assembly-plugin</h3><p><a href="http://maven.apache.org/plugins/maven-antrun-plugin/" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-antrun-plugin/</a></p><h3 id="4）-maven-dependency-plugin"><a href="#4）-maven-dependency-plugin" class="headerlink" title="4） maven-dependency-plugin"></a>4） maven-dependency-plugin</h3><p><a href="http://maven.apache.org/plugins/maven-dependency-plugin/" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-dependency-plugin/</a></p><p>maven-dependency-plugin最大的用途是帮助分析项目依赖，dependency:list能够列出项目最终解析到的依赖列表，dependency:tree能进一步的描绘项目依赖树，dependency:analyze可以告诉你项目依赖潜在的问题，如果你有直接使用到的却未声明的依赖，该目标就会发出警告。maven-dependency-plugin还有很多目标帮助你操作依赖文件，例如dependency:copy-dependencies能将项目依赖从本地Maven仓库复制到某个特定的文件夹下面。</p><h3 id="5）maven-help-plugin"><a href="#5）maven-help-plugin" class="headerlink" title="5）maven-help-plugin"></a>5）maven-help-plugin</h3><p>官网插件地址：<a href="http://maven.apache.org/plugins/maven-help-plugin/" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-help-plugin/</a></p><p>maven-help-plugin是一个小巧的辅助工具，最简单的help:system可以打印所有可用的环境变量和Java系统属性。help:effective-pom和help:effective-settings最 为有用，它们分别打印项目的有效POM和有效settings，有效POM是指合并了所有父POM（包括Super POM）后的XML，当你不确定POM的某些信息从何而来时，就可以查看有效POM。有效settings同理，特别是当你发现自己配置的 settings.xml没有生效时，就可以用help:effective-settings来验证。此外，maven-help-plugin的describe目标可以帮助你描述任何一个Maven插件的信息，还有all-profiles目标和active-profiles目标帮助查看项目的Profile。</p><h3 id="6）maven-resources-plugin"><a href="#6）maven-resources-plugin" class="headerlink" title="6）maven-resources-plugin"></a>6）maven-resources-plugin</h3><blockquote><ul><li>官网插件地址：<a href="http://maven.apache.org/plugins/maven-resources-plugin/" target="_blank" rel="noopener">http://maven.apache.org/plugins/maven-resources-plugin</a></li><li>作用：为了使项目结构更为清晰，Maven区别对待Java代码文件和资源文件，maven-compiler-plugin用来编译Java代码，maven-resources-plugin则用来处理资源文件。默认的主资源文件目录是src/main/resources，很多用户会需要添加额外的资源文件目录，这个时候就可以通过配置maven-resources-plugin来实现。此外，资源文件过滤也是Maven的一大特性，你可以在资源文件中使用${propertyName}形式的Maven属性，然后配置maven-resources-plugin开启对资源文件的过滤，之后就可以针对不同环境通过命令行或者Profile传入属性的值，以实现更为灵活的构建。</li></ul></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">代码6.1 设置资源文件编码</span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span>    <span class="comment">&lt;!--配置资源文件编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">### 7）versions-maven-plugin</span><br><span class="line"></span><br><span class="line"> 官网插件地址：[http://mojo.codehaus.org/versions-maven-plugin/](http://mojo.codehaus.org/versions-maven-plugin/)</span><br><span class="line"> </span><br><span class="line">很多Maven用户遇到过这样一个问题，当项目包含大量模块的时候，为他们集体更新版本就变成一件烦人的事情，到底有没有自动化工具能帮助完成这件 事情呢？（当然你可以使用sed之类的文本操作工具，不过不在本文讨论范围）答案是肯定的，versions-maven- plugin提供了很多目标帮助你管理Maven项目的各种版本信息。例如最常用的，命令 mvn versions:set -DnewVersion=1.1-SNAPSHOT 就能帮助你把所有模块的版本更新到1.1-SNAPSHOT。该插件还提供了其他一些很有用的目标，display-dependency- updates能告诉你项目依赖有哪些可用的更新；类似的display-plugin-updates能告诉你可用的插件更新；然后use- latest-versions能自动帮你将所有依赖升级到最新版本。最后，如果你对所做的更改满意，则可以使用 mvn versions:commit 提交，不满意的话也可以使用 mvn versions:revert 进行撤销。</span><br><span class="line"></span><br><span class="line">## 8 war包相关的例子-执行打war阶段的时候自动执行</span><br><span class="line"></span><br><span class="line">- 官网地址：[https://maven.apache.org/plugins/maven-war-plugin](https://maven.apache.org/plugins/maven-war-plugin/)</span><br><span class="line">- 所有的路径都是相对于pom文件的路径</span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!-- maven-war-plugin：mvn install可以将项目打成war包 --&gt;</span></span><br><span class="line">```xml</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">webResources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 需要打包的目标文件路径 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/webapp<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定build资源具体目录，默认是base directory。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">targetPath</span>&gt;</span>WEB-INF<span class="tag">&lt;/<span class="name">targetPath</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 打包的文件叫什么 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/web.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">webResources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 打包后放在这个目录下 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">warSourceDirectory</span>&gt;</span>src/main/webapp<span class="tag">&lt;/<span class="name">warSourceDirectory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">webXml</span>&gt;</span>src/main/webapp/WEB-INF/web.xml<span class="tag">&lt;/<span class="name">webXml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> 说明：指定打包的目录和对应的web.xml文件</span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">webResources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/webapp<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">webResources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9-编译插件使用实例-执行编译阶段的时候会自动执行"><a href="#9-编译插件使用实例-执行编译阶段的时候会自动执行" class="headerlink" title="9 编译插件使用实例-执行编译阶段的时候会自动执行"></a>9 编译插件使用实例-执行编译阶段的时候会自动执行</h2><ul><li>官网地址:<a href="https://maven.apache.org/plugins/maven-compiler-plugin/" target="_blank" rel="noopener">https://maven.apache.org/plugins/maven-compiler-plugin/</a></li><li>使用实例：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>                 </span><br><span class="line">    <span class="comment">&lt;!-- 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span>      </span><br><span class="line">        <span class="comment">&lt;!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中不能使用低版本jdk中不支持的语法)，会存在target不同于source的情况 --&gt;</span>                    </span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span> <span class="comment">&lt;!-- 源代码使用的JDK版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- 需要生成的目标class文件的编译版本 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span><span class="comment">&lt;!-- 字符集编码 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span><span class="comment">&lt;!-- 跳过测试 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">showWarnings</span>&gt;</span>true<span class="tag">&lt;/<span class="name">showWarnings</span>&gt;</span>               </span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="10-spring打可执行的插件"><a href="#10-spring打可执行的插件" class="headerlink" title="10 spring打可执行的插件"></a>10 spring打可执行的插件</h2><ul><li>官网地址:<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-maven-plugin.html" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-maven-plugin.html</a></li><li>spring打包实例<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>主类<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;maven插件知识总览&quot;&gt;&lt;a href=&quot;#maven插件知识总览&quot; class=&quot;headerlink&quot; title=&quot;maven插件知识总览&quot;&gt;&lt;/a&gt;maven插件知识总览&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-对于maven插件的了解&quot;&gt;&lt;a href=
      
    
    </summary>
    
      <category term="MAVEN" scheme="https://tonywang1.github.io/categories/MAVEN/"/>
    
    
      <category term="MAVEN" scheme="https://tonywang1.github.io/tags/MAVEN/"/>
    
  </entry>
  
  <entry>
    <title>maven浅尝辄止1</title>
    <link href="https://tonywang1.github.io/2019/09/18/maven1/"/>
    <id>https://tonywang1.github.io/2019/09/18/maven1/</id>
    <published>2019-09-17T20:28:36.000Z</published>
    <updated>2019-09-24T08:21:41.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maven的认识"><a href="#maven的认识" class="headerlink" title="maven的认识"></a>maven的认识</h1><hr><h2 id="1-什么是maven？"><a href="#1-什么是maven？" class="headerlink" title="1.什么是maven？"></a>1.什么是maven？</h2><p>   Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的项目管理工具软件。<br><a href="https://baike.baidu.com/item/MAVEN" target="_blank" rel="noopener">参考</a> 　</p><h2 id="2-maven能帮我们解决什么问题"><a href="#2-maven能帮我们解决什么问题" class="headerlink" title="2. maven能帮我们解决什么问题"></a>2. maven能帮我们解决什么问题</h2><blockquote><ol><li>项目统一构建 - 统一生成项目结构</li><li>jar包统一管理 - 自动下载jar包、对应的jar包的依赖、jar包不同版本冲突问题、jar包版本统一管理</li><li>项目版本统一管理 - Release和SNAPSHOT版本即稳定版本和快照版本</li><li>项目的编译、测试、打包 、安装、发布等管理</li><li>项目不同环境配置的管理</li><li>不同项目之间依赖管理</li></ol></blockquote><h2 id="3-maven中如何使用profile来解决项目不同环境的问题"><a href="#3-maven中如何使用profile来解决项目不同环境的问题" class="headerlink" title="3. maven中如何使用profile来解决项目不同环境的问题"></a>3. maven中如何使用profile来解决项目不同环境的问题</h2><h3 id="profile使用原理：通过激活某个profile来加载对应的属性，达到不同环境加载不同属性作用"><a href="#profile使用原理：通过激活某个profile来加载对应的属性，达到不同环境加载不同属性作用" class="headerlink" title="profile使用原理：通过激活某个profile来加载对应的属性，达到不同环境加载不同属性作用"></a>profile使用原理：通过激活某个profile来加载对应的属性，达到不同环境加载不同属性作用</h3><blockquote><p>1、命令激活：通过打包的时候使用 -p profile名称指定该profile对应的环境的变量<br>2、属性加载：不同profile定义不同属性或者加载不同的属性文件-<strong><em>代码3.1</em></strong><br>3、属性引用：在2中定义的属性或者加载的属性文件的内容可以通过<code>${定义的属性名称}</code>引用<br>4、属性文件赋值：利用2中加载属性与resource中的filter连用，达到对属性文件赋值的作用，即代码2中的属性文件中所有带有<code>${定义的属性名称}</code>引用的变量，在编译阶段都会用实际的属性代替，<strong><em>代码3.2</em></strong></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">代码3.1</span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 默认激活开发配制，使用config-dev.properties来替换设置过虑的资源文件中的$&#123;key&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span>config-dev.properties<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">mysql.username</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">mysql.username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span>config-test.properties<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">mysql.username</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">mysql.username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span>config-prod.properties<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">mysql.username</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">mysql.username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line">``` xml</span><br><span class="line">*** 代码3.2-这里filtering属性=true代表所有资源文件中带有placehoder的变量都会用maven的便来给你代替 ***</span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Resource Filter --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-maven中如何使用resource打不同的资源文件来解决不同环境问题"><a href="#4-maven中如何使用resource打不同的资源文件来解决不同环境问题" class="headerlink" title="4. maven中如何使用resource打不同的资源文件来解决不同环境问题"></a>4. maven中如何使用resource打不同的资源文件来解决不同环境问题</h2><ul><li>默认属性文件目录处理：根据profile属性拼接并打包对应的配置文件如代码<strong><em>4.1</em></strong></li><li>源文件目录下配置文件处理：拷贝java源文件目录下的配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">代码4.1</span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>application.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>application-dev.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>application-test.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>application-prod.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>application.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">include</span>&gt;</span>application-$&#123;profiles.active&#125;.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">代码4.2</span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!-- 设定主资源目录  --&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，只处理如下配置中包含的资源类型 --&gt;</span>     </span><br><span class="line"> <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">includes</span>&gt;</span>  </span><br><span class="line">         </span><br><span class="line">    <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，不处理如下配置中包含的资源类型（剔除下如下配置中包含的资源类型）--&gt;</span>      </span><br><span class="line"><span class="tag">&lt;<span class="name">excludes</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.yaml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">excludes</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，指定处理后的资源文件输出目录，默认是$&#123;build.outputDirectory&#125;指定的目录--&gt;</span>      </span><br><span class="line">    <span class="comment">&lt;!--&lt;targetPath&gt;$&#123;build.outputDirectory&#125;&lt;/targetPath&gt; --&gt;</span>      </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，是否对主资源目录开启资源过滤 --&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-maven中父子项目依赖关系"><a href="#4-maven中父子项目依赖关系" class="headerlink" title="4. maven中父子项目依赖关系"></a>4. maven中父子项目依赖关系</h2><h3 id="父子项目依赖的多模块处理作用"><a href="#父子项目依赖的多模块处理作用" class="headerlink" title="父子项目依赖的多模块处理作用:"></a><strong><em>父子项目依赖的多模块处理作用:</em></strong></h3><blockquote><p>复杂项目通过合理拆分达到代码复用、方便管理</p></blockquote><ul><li>父项目设置-如代码4.1 <strong><em>packaging=pom</em></strong><br>modules中包含所有子项目，里面的名字为各个项目的<em>artifactId</em>参数</li><li>子项目设置-如代码4.2，里面的参数为父项目的相应值，子项目不指定<em>groupId</em>，会自动从父项目中继承</li><li>子项目之家可以通过<em>dependency</em>来进行引用</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">代码4.1</span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>pojo<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>web<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>dao<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">代码4.2</span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>online_retailers<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.hd<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-maven中必要节点的作用说明"><a href="#5-maven中必要节点的作用说明" class="headerlink" title="5.maven中必要节点的作用说明"></a>5.maven中必要节点的作用说明</h2><ul><li><p>filters：定义指定filter属性的位置，例如filter元素赋值filters/filter1.properties,那么这个文件里面就可以定义name=value对，这个name=value对的值就可以在工程pom中通过${name}引用，默认的filter目录是${basedir}/src/main/fiters/</p></li><li><p>packing：主要打什么类型的包-pom、jar(默认)、war</p><blockquote><ul><li>pom - 父类型都为pom</li><li>jar - 内部调用或者服务使用</li><li>war - 部署的项目</li></ul></blockquote></li><li><p>modelVersion:模型版本，暂时固定为4.0.0</p></li><li><p>groupId： </p><blockquote><p>1 项目构建的时候第一次会根据这个参数构建目录<br>2 打包后jar位置为：<em>repository<em>后面的目录为-groupId所设置的目录 、在后面为</em>artifactId<em>，在后面为版本</em>version</em> ，所以groupId+artifactId+version决定了jar包的位置</p></blockquote></li><li><p>artifactId：项目的唯一ID</p></li><li><p>version：版本号，分release和snapshot版本</p></li><li><p>name:项目的显示名称，idea的maven视图中会显示这个名称</p></li></ul><h2 id="6-maven中内置的属性变量"><a href="#6-maven中内置的属性变量" class="headerlink" title="6. maven中内置的属性变量"></a>6. maven中内置的属性变量</h2><p>内置属性(Maven预定义,用户可以直接使用)</p><blockquote><ul><li><code>${basedir}</code>表示项目根目录,即包含pom.xml文件的目录;</li><li><code>${version}</code>表示项目版本;</li><li><code>${project.basedir}</code>同${basedir};</li><li><code>${project.baseUri}</code>表示项目文件地址;</li><li><code>${maven.build.timestamp}</code>表示项目构件开始时间;</li></ul></blockquote><p> POM属性</p><blockquote><ul><li><code>${project.build.directory}</code>表示主源码路径</li><li><code>${project.build.sourceEncoding}</code>表示主源码的编码格式</li><li><code>${project.build.sourceDirectory}</code>表示主源码路径</li><li><code>${project.build.finalName}</code>表示输出文件名称</li><li><code>${project.version}</code>表示项目版本,与${version}相同</li></ul></blockquote><p> Java系统属性(所有的Java系统属性都可以使用Maven属性引用)</p><blockquote><ul><li>使用mvn help:system命令可查看所有的Java系统属性;</li><li>System.getProperties()可得到所有的Java属性;</li><li>${user.home}表示用户目录</li></ul></blockquote><p>环境变量属性(所有的环境变量都可以用以env.开头的Maven属性引用)</p><blockquote><p>-使用mvn help:system命令可查看所有环境变量;</p><ul><li><code>${env.JAVA_HOME}</code>表示JAVA_HOME环境变量的值;</li></ul></blockquote><h2 id="8-maven的生命周期，以及执行规则"><a href="#8-maven的生命周期，以及执行规则" class="headerlink" title="8.maven的生命周期，以及执行规则"></a>8.maven的生命周期，以及执行规则</h2><h4 id="1）-生命周期"><a href="#1）-生命周期" class="headerlink" title="1） 生命周期"></a>1） 生命周期</h4><blockquote><p>Maven有三个独立的生命周期为：clean-项目清理、default-项目构建、site-站点生成</p></blockquote><h3 id="2）生命周期对应的阶段"><a href="#2）生命周期对应的阶段" class="headerlink" title="2）生命周期对应的阶段"></a>2）生命周期对应的阶段</h3><p>clean生命周期包含三个阶段</p><blockquote><ul><li>pre-clean：执行一些需要在clean之前完成的工作</li><li>clean：移除所有上一次构建生成的文件</li><li>post-clean：执行一些需要在clean之后立刻完成的工作</li></ul></blockquote><p>default生命周期的阶段列表：</p><blockquote><ul><li>validate：验证</li><li>initialize：initialize build state, e.g. set properties or create directories.</li><li>generate-sources：generate any source code for inclusion in compilation.</li><li>process-sources：process the source code, for example to filter any values.</li><li>generate-resources：处理资源文件</li><li>process-resources：复制并处理资源文件，至目标目录，准备打包</li><li>compile：编译项目源代码</li><li>process-classes：post-process the generated files from compilation, for example to do bytecode enhancement on Java classes.</li><li>generate-test-sources：generate any test source code for inclusion in compilation.</li><li>process-test-sources：process the test source code, for example to filter any values.</li><li>generate-test-resources create resources for testing.</li><li>process-test-resources 复制并处理资源文件，至目标测试目录</li><li>test-compile 编译测试源代码</li><li>process-test-classes： post-process the generated files from test compilation, for example to do bytecode enhancement on Java classes. For Maven 2.0.5 and above.</li><li>test：使用合适的单元测试框架运行测试，这些测试代码不会被打包或者部署。</li><li>prepare-package：perform any operations necessary to prepare a package before the actual packaging. This often results in an unpacked, processed version of the package. (Maven 2.1 and above)</li><li>package：接受编译好的代码，打包成可发布的格式，如jar</li><li>pre-integration-test：perform actions required before integration tests are executed. This may involve things such as setting up the required environment.</li><li>integration-test：process and deploy the package if necessary into an environment where integration tests can be run.</li><li>post-integration-test：perform actions required after integration tests have been executed. This may including cleaning up the environment.</li><li>verify run any checks to verify the package is valid and meets quality criteria.</li><li>install：将包安装至本地仓库，以让其他项目依赖</li><li>deploy</li></ul></blockquote><h3 id="3-生命周期中阶段的执行关系"><a href="#3-生命周期中阶段的执行关系" class="headerlink" title="3) 生命周期中阶段的执行关系"></a>3) 生命周期中阶段的执行关系</h3><ul><li>某个特定生命周期中，生命周期后面的阶段执行，都会伴随着前面阶段的执行</li><li>不同生命周期之间不依赖</li></ul><h3 id="4）生命周期、阶段、插件关系"><a href="#4）生命周期、阶段、插件关系" class="headerlink" title="4）生命周期、阶段、插件关系"></a>4）生命周期、阶段、插件关系</h3><p>一个生命周期中有多个阶段，一个阶段可以绑定一个或者多个插件</p><h2 id="9-SNAPSHOT版本和release版本区别"><a href="#9-SNAPSHOT版本和release版本区别" class="headerlink" title="9.SNAPSHOT版本和release版本区别"></a>9.SNAPSHOT版本和release版本区别</h2><ul><li><p>Release版本则代表稳定的版本</p><blockquote><p>只要版本不变，则打包的时候会用本地库中的版本，不会去远程服务器上更新。</p></blockquote></li><li><p>Snapshot版本代表不稳定、尚处于开发中的版本</p><blockquote><p>项目每次构建的时候，Maven会去远程repository下载snapshot的最新版本，如果被依赖的snapshot版本不断更新，则项目每次构建的时候的结果都会不一样</p></blockquote></li></ul><h2 id="10-依赖包的scope取值说明"><a href="#10-依赖包的scope取值说明" class="headerlink" title="10.依赖包的scope取值说明"></a>10.依赖包的scope取值说明</h2><blockquote><ul><li>compile，缺省值，适用于所有阶段，会随着项目一起发布。</li><li>provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。</li><li>runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。</li><li>test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。</li><li>system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。</li></ul></blockquote><h2 id="11-自定义属性使用"><a href="#11-自定义属性使用" class="headerlink" title="11.自定义属性使用"></a>11.自定义属性使用</h2><p>标签“properties”中定义的属性</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;maven的认识&quot;&gt;&lt;a href=&quot;#maven的认识&quot; class=&quot;headerlink&quot; title=&quot;maven的认识&quot;&gt;&lt;/a&gt;maven的认识&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-什么是maven？&quot;&gt;&lt;a href=&quot;#1-什么是maven？&quot; 
      
    
    </summary>
    
      <category term="MAVEN" scheme="https://tonywang1.github.io/categories/MAVEN/"/>
    
    
      <category term="MAVEN" scheme="https://tonywang1.github.io/tags/MAVEN/"/>
    
  </entry>
  
  <entry>
    <title>JAVA时间总结</title>
    <link href="https://tonywang1.github.io/2019/09/18/java_date/"/>
    <id>https://tonywang1.github.io/2019/09/18/java_date/</id>
    <published>2019-09-17T20:28:36.000Z</published>
    <updated>2019-09-24T09:55:00.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JAVA时间总结"><a href="#JAVA时间总结" class="headerlink" title="JAVA时间总结"></a>JAVA时间总结</h1><hr><h2 id="1-UTC-世界标准时间"><a href="#1-UTC-世界标准时间" class="headerlink" title="1.UTC(世界标准时间)"></a>1.UTC(世界标准时间)</h2><p>什么是utc时间</p><blockquote><p>即协调世界时。UTC是以原子时秒长为基础，在时刻上尽量接近于GMT的一种时间计量系统。为确保UTC与GMT相差不会超过0.9秒，在有需要的情况下会在UTC内加上正或负闰秒。UTC现在作为世界标准时间使用</p></blockquote><h2 id="2-GMT-格林尼治平时"><a href="#2-GMT-格林尼治平时" class="headerlink" title="2.GMT(格林尼治平时)"></a>2.GMT(格林尼治平时)</h2><blockquote><p>即格林尼治标准时间，也就是世界时。GMT的正午是指当太阳横穿格林尼治子午线（本初子午线）时的时间。但由于地球自转不均匀不规则，导致GMT不精确，现在已经不再作为世界标准时间使用。</p></blockquote><p>UTC和GMT时间误差不超过0.9秒,即两者基本相同</p><h2 id="3-CST-北京时间"><a href="#3-CST-北京时间" class="headerlink" title="3.CST(北京时间)"></a>3.CST(北京时间)</h2><blockquote><p>北京时间，China Standard Time，中国标准时间。在时区划分上，属东八区，比协调世界时早8小时，记为UTC+8</p></blockquote><p>java日期工具类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateUtils</span> </span>&#123;</span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleDateFormat datetimeFormat = <span class="keyword">new</span> SimpleDateFormat(  </span><br><span class="line">            <span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleDateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(  </span><br><span class="line">            <span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleDateFormat timeFormat = <span class="keyword">new</span> SimpleDateFormat(  </span><br><span class="line">            <span class="string">"HH:mm:ss"</span>);  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得当前日期时间 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 日期时间格式yyyy-MM-dd HH:mm:ss </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">currentDatetime</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> datetimeFormat.format(now());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 格式化日期时间 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 日期时间格式yyyy-MM-dd HH:mm:ss </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDatetime</span><span class="params">(Date date)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> datetimeFormat.format(date);  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 格式化日期时间 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern </span></span><br><span class="line"><span class="comment">     *            格式化模式，详见&#123;<span class="doctag">@link</span> SimpleDateFormat&#125;构造器 </span></span><br><span class="line"><span class="comment">     *            &lt;code&gt;SimpleDateFormat(String pattern)&lt;/code&gt; </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDatetime</span><span class="params">(Date date, String pattern)</span> </span>&#123;  </span><br><span class="line">        SimpleDateFormat customFormat = (SimpleDateFormat) datetimeFormat  </span><br><span class="line">                .clone();  </span><br><span class="line">        customFormat.applyPattern(pattern);  </span><br><span class="line">        <span class="keyword">return</span> customFormat.format(date);  </span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化 时间戳</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDatetime</span><span class="params">(Timestamp date, String pattern)</span> </span>&#123;  </span><br><span class="line">        SimpleDateFormat customFormat = (SimpleDateFormat) datetimeFormat  </span><br><span class="line">                .clone();  </span><br><span class="line">        customFormat.applyPattern(pattern);  </span><br><span class="line">        <span class="keyword">return</span> customFormat.format(date);  </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字符串日期 格式化后 变为字符串形式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDatetime</span><span class="params">(String date, String pattern)</span> </span>&#123;  </span><br><span class="line">        Date date2 = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">SimpleDateFormat customFormat = (SimpleDateFormat) datetimeFormat  </span><br><span class="line">        .clone();  </span><br><span class="line">customFormat.applyPattern(pattern);  </span><br><span class="line">date2 = customFormat.parse(date );</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> formatDatetime(date2, pattern);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getCurTimestamp</span><span class="params">(Date date)</span></span>&#123;</span><br><span class="line">    String curDate =  formatDatetime( date, <span class="string">"yyyyMMddHHmmss"</span> ) ;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">return</span> Long.parseLong( curDate) ; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 字符串转换成日期</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> pattern 日期格式 "yyyy-MM-dd HH:mm:ss"</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">strToDate</span><span class="params">(String dateStr,String pattern)</span> </span>&#123;</span><br><span class="line">      </span><br><span class="line">       SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(pattern);</span><br><span class="line">       Date date = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">        date = format.parse(dateStr);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">       e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得当前日期 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 日期格式yyyy-MM-dd </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">currentDate</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> dateFormat.format(now());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 格式化日期 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 日期格式yyyy-MM-dd </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDate</span><span class="params">(Date date)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> dateFormat.format(date);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得当前时间 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 时间格式HH:mm:ss </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">currentTime</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> timeFormat.format(now());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 格式化时间 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 时间格式HH:mm:ss </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatTime</span><span class="params">(Date date)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> timeFormat.format(date);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得当前时间的&lt;code&gt;java.util.Date&lt;/code&gt;对象 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">now</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Date();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Calendar <span class="title">calendar</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        Calendar cal = GregorianCalendar.getInstance(Locale.CHINESE);  </span><br><span class="line">        cal.setFirstDayOfWeek(Calendar.MONDAY);  </span><br><span class="line">        <span class="keyword">return</span> cal;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得当前时间的毫秒数 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 详见&#123;<span class="doctag">@link</span> System#currentTimeMillis()&#125; </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">millis</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * 获得当前Chinese月份 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">month</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> calendar().get(Calendar.MONTH) + <span class="number">1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得月份中的第几天 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dayOfMonth</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> calendar().get(Calendar.DAY_OF_MONTH);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 今天是星期的第几天 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dayOfWeek</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> calendar().get(Calendar.DAY_OF_WEEK);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 今天是年中的第几天 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dayOfYear</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> calendar().get(Calendar.DAY_OF_YEAR);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     *判断原日期是否在目标日期之前 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dst </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isBefore</span><span class="params">(Date src, Date dst)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> src.before(dst);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     *判断原日期是否在目标日期之后 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dst </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isAfter</span><span class="params">(Date src, Date dst)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> src.after(dst);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     *判断两日期是否相同 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date1 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date2 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEqual</span><span class="params">(Date date1, Date date2)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> date1.compareTo(date2) == <span class="number">0</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 判断某个日期是否在某个日期范围 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beginDate </span></span><br><span class="line"><span class="comment">     *            日期范围开始 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endDate </span></span><br><span class="line"><span class="comment">     *            日期范围结束 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src </span></span><br><span class="line"><span class="comment">     *            需要判断的日期 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">between</span><span class="params">(Date beginDate, Date endDate, Date src)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> beginDate.before(src) &amp;&amp; endDate.after(src);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得当前月的最后一天 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * HH:mm:ss为0，毫秒为999 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">lastDayOfMonth</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        Calendar cal = calendar();  </span><br><span class="line">        cal.set(Calendar.DAY_OF_MONTH, <span class="number">0</span>); <span class="comment">// M月置零  </span></span><br><span class="line">        cal.set(Calendar.HOUR_OF_DAY, <span class="number">0</span>);<span class="comment">// H置零  </span></span><br><span class="line">        cal.set(Calendar.MINUTE, <span class="number">0</span>);<span class="comment">// m置零  </span></span><br><span class="line">        cal.set(Calendar.SECOND, <span class="number">0</span>);<span class="comment">// s置零  </span></span><br><span class="line">        cal.set(Calendar.MILLISECOND, <span class="number">0</span>);<span class="comment">// S置零  </span></span><br><span class="line">        cal.set(Calendar.MONTH, cal.get(Calendar.MONTH) + <span class="number">1</span>);<span class="comment">// 月份+1  </span></span><br><span class="line">        cal.set(Calendar.MILLISECOND, -<span class="number">1</span>);<span class="comment">// 毫秒-1  </span></span><br><span class="line">        <span class="keyword">return</span> cal.getTime();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得当前月的第一天 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * HH:mm:ss SS为零 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">firstDayOfMonth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Calendar cal = calendar();  </span><br><span class="line">        cal.set(Calendar.DAY_OF_MONTH, <span class="number">1</span>); <span class="comment">// M月置1  </span></span><br><span class="line">        cal.set(Calendar.HOUR_OF_DAY, <span class="number">0</span>);<span class="comment">// H置零  </span></span><br><span class="line">        cal.set(Calendar.MINUTE, <span class="number">0</span>);<span class="comment">// m置零  </span></span><br><span class="line">        cal.set(Calendar.SECOND, <span class="number">0</span>);<span class="comment">// s置零  </span></span><br><span class="line">        cal.set(Calendar.MILLISECOND, <span class="number">0</span>);<span class="comment">// S置零  </span></span><br><span class="line">        <span class="keyword">return</span> cal.getTime();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Date <span class="title">weekDay</span><span class="params">(<span class="keyword">int</span> week)</span> </span>&#123;  </span><br><span class="line">        Calendar cal = calendar();  </span><br><span class="line">        cal.set(Calendar.DAY_OF_WEEK, week);  </span><br><span class="line">        <span class="keyword">return</span> cal.getTime();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得周五日期 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 注：日历工厂方法&#123;<span class="doctag">@link</span> #calendar()&#125;设置类每个星期的第一天为Monday，US等每星期第一天为sunday </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">friday</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> weekDay(Calendar.FRIDAY);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得周六日期 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 注：日历工厂方法&#123;<span class="doctag">@link</span> #calendar()&#125;设置类每个星期的第一天为Monday，US等每星期第一天为sunday </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">saturday</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> weekDay(Calendar.SATURDAY);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获得周日日期 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 注：日历工厂方法&#123;<span class="doctag">@link</span> #calendar()&#125;设置类每个星期的第一天为Monday，US等每星期第一天为sunday </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">sunday</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> weekDay(Calendar.SUNDAY);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 将字符串日期时间转换成java.util.Date类型 </span></span><br><span class="line"><span class="comment">     * &lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 日期时间格式yyyy-MM-dd HH:mm:ss </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datetime </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">parseDatetime</span><span class="params">(String datetime)</span> <span class="keyword">throws</span> ParseException </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> datetimeFormat.parse(datetime);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 将字符串日期转换成java.util.Date类型 </span></span><br><span class="line"><span class="comment">     *&lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 日期时间格式yyyy-MM-dd </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ParseException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">parseDate</span><span class="params">(String date)</span> <span class="keyword">throws</span> ParseException </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> dateFormat.parse(date);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 将字符串日期转换成java.util.Date类型 </span></span><br><span class="line"><span class="comment">     *&lt;p&gt; </span></span><br><span class="line"><span class="comment">     * 时间格式 HH:mm:ss </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ParseException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">parseTime</span><span class="params">(String time)</span> <span class="keyword">throws</span> ParseException </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> timeFormat.parse(time);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 根据自定义pattern将字符串日期转换成java.util.Date类型 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datetime </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ParseException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">parseDatetime</span><span class="params">(String datetime, String pattern)</span>  </span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ParseException </span>&#123;  </span><br><span class="line">        SimpleDateFormat format = (SimpleDateFormat) datetimeFormat.clone();  </span><br><span class="line">        format.applyPattern(pattern);  </span><br><span class="line">        <span class="keyword">return</span> format.parse(datetime);  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//北京时间转为utc时间，oozie 使用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">BJ2UTC</span><span class="params">(String time)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Date date = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = parseDatetime(time);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        Calendar cal = Calendar.getInstance( );</span><br><span class="line">        cal.setTime(date);<span class="comment">//date 换成已经已知的Date对象</span></span><br><span class="line">        cal.add(Calendar.HOUR_OF_DAY, -<span class="number">8</span>);<span class="comment">// before 8 hour</span></span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd'T'HH:mm'Z'"</span>);</span><br><span class="line">        <span class="keyword">return</span> sdf.format(cal.getTime( ));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 将时间戳转换为时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">stampToDate</span><span class="params">(Long timestamp)</span></span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date(timestamp);</span><br><span class="line">        <span class="keyword">return</span> formatDatetime(date) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到最近一个月的所有日期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> d 传入的日期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getDaysMonthByDate</span><span class="params">(Date d,String pattern)</span><span class="comment">//根据传入的日期获取一个月内的所有日期</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        List&lt;String&gt; lst=<span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        Date startDate = getOneMonthDate(d);</span><br><span class="line">        <span class="keyword">while</span> (!startDate.after(d)) &#123;</span><br><span class="line">            lst.add(formatDatetime(startDate,pattern));</span><br><span class="line">            startDate = getNext(startDate);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> lst;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到一个月前的日期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> d</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Date <span class="title">getOneMonthDate</span><span class="params">(Date d )</span></span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.setTime( d );</span><br><span class="line">        calendar.add( Calendar.MONTH, -<span class="number">1</span> );</span><br><span class="line">        calendar.add( Calendar.DAY_OF_MONTH, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> calendar.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前日期+1天</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getNext</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        calendar.setTime(date);</span><br><span class="line">        calendar.add(Calendar.DATE, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> calendar.getTime();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datetime  2017-10-01T16:00:00.000Z</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> format  yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//utc 转换为 北京时间 （时间带有T分隔符的） </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">UTC2BJ</span><span class="params">(String datetime, String format)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">SimpleDateFormat customFormat = (SimpleDateFormat) datetimeFormat.clone();  </span><br><span class="line">customFormat.applyPattern(format);</span><br><span class="line">customFormat.setTimeZone(TimeZone.getTimeZone(<span class="string">"UTC"</span>) );</span><br><span class="line"></span><br><span class="line">        Date date = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = customFormat.parse(  datetime);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span>  date;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * UTC 时间转化为bj时间的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datetime</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> format</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">UTC2BJStr</span><span class="params">(String datetime, String format)</span></span>&#123;</span><br><span class="line">    Date date = UTC2BJ(datetime,format);</span><br><span class="line">    <span class="keyword">return</span> formatDatetime( date );</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取某一天的开始时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Date <span class="title">getDayBegin</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">         </span><br><span class="line">          Calendar cal = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line">          cal.setTime(date);</span><br><span class="line">          cal.set(Calendar.HOUR_OF_DAY, <span class="number">0</span>);</span><br><span class="line">          cal.set(Calendar.MINUTE, <span class="number">0</span>);</span><br><span class="line">          cal.set(Calendar.SECOND, <span class="number">0</span>);</span><br><span class="line">          cal.set(Calendar.MILLISECOND, <span class="number">0</span>);</span><br><span class="line">          <span class="keyword">return</span> cal.getTime();</span><br><span class="line">      &#125;</span><br><span class="line">    </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 获取当天的结束时间</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Date <span class="title">getDayEnd</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">          Calendar cal = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line">          cal.setTime(date);</span><br><span class="line">          cal.set(Calendar.HOUR_OF_DAY, <span class="number">23</span>);</span><br><span class="line">          cal.set(Calendar.MINUTE, <span class="number">59</span>);</span><br><span class="line">          cal.set(Calendar.SECOND, <span class="number">59</span>);</span><br><span class="line">          <span class="keyword">return</span> cal.getTime();</span><br><span class="line">      &#125;</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//    String str = formatDatetime("1984-1-1 12:12:13","yyyy-MM-dd");</span></span><br><span class="line"><span class="comment">//        System.out.println(str );</span></span><br><span class="line"><span class="comment">//    Long t =  millis();</span></span><br><span class="line">    </span><br><span class="line">    String startCreateDate=<span class="string">"2017-10-01T16:00:00.000Z"</span>;</span><br><span class="line">    Date start = DateUtils.UTC2BJ( startCreateDate, <span class="string">"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"</span> );</span><br><span class="line">    System.out.println( start);</span><br><span class="line"><span class="comment">//    Long t =  1504681347375l;</span></span><br><span class="line"><span class="comment">//    String str = stampToDate(t );</span></span><br><span class="line"><span class="comment">//    System.out.println(t+"==="+ str );</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//    List list = getDaysMonthByDate(new Date(),"M月d");</span></span><br><span class="line"><span class="comment">//        for(int i=0;i&lt;list.size();i++ )&#123;</span></span><br><span class="line"><span class="comment">//        System.out.println( list.get(i));</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        String str2 = BJ2UTC( "2099-12-12 12:12:12") ;</span></span><br><span class="line"><span class="comment">//        System.out.print(str2 );</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JAVA时间总结&quot;&gt;&lt;a href=&quot;#JAVA时间总结&quot; class=&quot;headerlink&quot; title=&quot;JAVA时间总结&quot;&gt;&lt;/a&gt;JAVA时间总结&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-UTC-世界标准时间&quot;&gt;&lt;a href=&quot;#1-UTC-世界标准时间
      
    
    </summary>
    
      <category term="JAVA" scheme="https://tonywang1.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://tonywang1.github.io/tags/JAVA/"/>
    
      <category term="DATE" scheme="https://tonywang1.github.io/tags/DATE/"/>
    
  </entry>
  
  <entry>
    <title>mysql-sql执行流程</title>
    <link href="https://tonywang1.github.io/2019/09/18/linux_cron/"/>
    <id>https://tonywang1.github.io/2019/09/18/linux_cron/</id>
    <published>2019-09-17T20:28:36.000Z</published>
    <updated>2019-09-27T09:14:20.979Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MYSQL-SQL执行流程"><a href="#MYSQL-SQL执行流程" class="headerlink" title="MYSQL-SQL执行流程"></a>MYSQL-SQL执行流程</h1><hr><h2 id="1-SQL的执行流程"><a href="#1-SQL的执行流程" class="headerlink" title="1.SQL的执行流程"></a>1.SQL的执行流程</h2><p> 词法分析-&gt;语法分析-解析树-预处理-检查权限-新解析树-查询优化器-执行计划-存储引擎获取数据</p><h2 id="1-SQL-的关键字执行的流程如何"><a href="#1-SQL-的关键字执行的流程如何" class="headerlink" title="1.SQL 的关键字执行的流程如何"></a>1.SQL 的关键字执行的流程如何</h2><p> 1）执行的SQL语句-每一步执行的输出，是下一步的输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span></span><br><span class="line">    &lt; select_list &gt;</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    &lt; left_table &gt; &lt; join_type &gt;</span><br><span class="line"><span class="keyword">JOIN</span> &lt; right_table &gt; <span class="keyword">ON</span> &lt; join_condition &gt;</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    &lt; where_condition &gt;</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    &lt; group_by_list &gt;</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">    &lt; having_condition &gt;</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    &lt; order_by_condition &gt;</span><br><span class="line"><span class="keyword">LIMIT</span> &lt; limit_number &gt;</span><br></pre></td></tr></table></figure><p>2)实际执行流程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">FROM &lt;left_table&gt;</span><br><span class="line">ON &lt;join_condition&gt;</span><br><span class="line">&lt;join_type&gt; JOIN &lt;right_table&gt;</span><br><span class="line">WHERE &lt;where_condition&gt;</span><br><span class="line">GROUP BY &lt;group_by_list&gt;</span><br><span class="line">HAVING &lt;having_condition&gt;</span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">DISTINCT</span> &lt;select_list&gt;</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> &lt;order_by_condition&gt;</span><br><span class="line"><span class="keyword">LIMIT</span> &lt;limit_number&gt;</span><br></pre></td></tr></table></figure><h2 id="3-执行顺序实例"><a href="#3-执行顺序实例" class="headerlink" title="3 执行顺序实例"></a>3 执行顺序实例</h2><p>1）准备工作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE /*!32312 IF NOT EXISTS*/`test1db` /*!40100 DEFAULT CHARACTER SET utf8 */;</span><br><span class="line">USE `test1db`;</span><br><span class="line">CREATE TABLE `table1` (</span><br><span class="line">  `uid` varchar(10) NOT NULL,</span><br><span class="line">  `name` varchar(10) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`uid`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">insert  into `table1`(`uid`,`name`) values (&apos;aaa&apos;,&apos;mike&apos;),(&apos;bbb&apos;,&apos;jack&apos;),(&apos;ccc&apos;,&apos;mike&apos;),(&apos;ddd&apos;,&apos;mike&apos;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE `table2` (</span><br><span class="line">  `oid` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `uid` varchar(10) DEFAULT NULL,</span><br><span class="line">  `old` int(11) DEFAULT NULL COMMENT &apos;年龄&apos;,</span><br><span class="line">  PRIMARY KEY (`oid`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">insert  into `table2`(`oid`,`uid`,`old`) values (1,&apos;aaa&apos;,2),(2,&apos;aaa&apos;,1),(3,&apos;bbb&apos;,3),(4,&apos;bbb&apos;,4),(5,&apos;bbb&apos;,5),(6,&apos;ccc&apos;,6),(7,NULL,7);</span><br></pre></td></tr></table></figure><p>2）最终的执行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    a.uid,</span><br><span class="line">    count(b.oid) AS total </span><br><span class="line">FROM</span><br><span class="line">    table1 AS a</span><br><span class="line">LEFT JOIN table2 AS b ON a.uid = b.uid</span><br><span class="line">WHERE</span><br><span class="line">    a. NAME = &apos;mike&apos;</span><br><span class="line">GROUP BY</span><br><span class="line">    a.uid</span><br><span class="line">HAVING</span><br><span class="line">    count(b.oid) &lt; 2</span><br><span class="line">ORDER BY</span><br><span class="line">    total DESC</span><br><span class="line">LIMIT 1;</span><br></pre></td></tr></table></figure><p>3）执行FROM关键字-笛卡尔积</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * </span><br><span class="line">from table1  a </span><br><span class="line">left  join table2 b on a.uid=b.uid</span><br></pre></td></tr></table></figure><p>4) ON关键字过滤-v-4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table1  a join table2 b on a.uid=b.uid ;</span><br></pre></td></tr></table></figure><p>5)如果使用了外连接(LEFT,RIGHT,FULL)，主表（保留表）中的不符合ON条件的列也会被加入到这一步的执行结果中-生成新的虚拟表v-5</p><p>6）WHERE条件过滤 -v-6<br>对于上面的执行结果，满足WHERE条件的结果集的数据，会生成新的虚拟表 v-6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * </span><br><span class="line">from table1  a </span><br><span class="line">left  join table2 b on a.uid=b.uid </span><br><span class="line">where a.name=&apos;mike&apos;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：ON和where条件过滤的区别</p><blockquote><p>1 在inner join的时候 ，两者查询的结果一样<br>2 在外连接(LEFT,RIGHT,FULL)查询的时候，on对关联表进行条件过滤，然后在与主表进行关联，这个过程中这个查询条件对主表不会有影响<br>3 在外连接(LEFT,RIGHT,FULL)查询的时候，where 条件过滤，是对连接后的整个临时表进行过滤，不分主从</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查询示例：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1  a <span class="keyword">left</span>  <span class="keyword">join</span> table2 b <span class="keyword">on</span> a.uid=b.uid <span class="keyword">and</span> b.oid=<span class="string">'1'</span> ; </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table1  a <span class="keyword">left</span>  <span class="keyword">join</span> table2 b <span class="keyword">on</span> a.uid=b.uid <span class="keyword">where</span>  b.oid=<span class="string">'1'</span> ;</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><blockquote><p>主表进行过滤必须放到WHERE条件后，从表过滤如果先过滤后链接则条件放到on后面，如果先链接在过滤则放到WHERE条件后</p></blockquote><p>7）GROUP BY 关键字进行过滤<br> 这个会对表 v-6中的表的某些字段进行分组，<strong>他对于后面的SELECT,和HAVING所用到的列必须包含在GROUP BY 中，对于没有出现的必须进行聚合运算</strong></p><p> 对于mysql上面的限制条件可以忽略，但是select字段中没有出现在group by中的字段，会随机选择一个值。</p><p>8)HAVING 关键字<br>作用：对分组后的数据进行过滤，满足条件的数据放到下一个虚拟表中-v-8</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    a.uid,</span><br><span class="line">    <span class="keyword">count</span>(b.oid) <span class="keyword">AS</span> total </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    table1 <span class="keyword">AS</span> a</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> table2 <span class="keyword">AS</span> b <span class="keyword">ON</span> a.uid = b.uid</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    a. <span class="keyword">NAME</span> = <span class="string">'mike'</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    a.uid</span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line">    <span class="keyword">count</span>(b.oid) &lt; <span class="number">1</span></span><br></pre></td></tr></table></figure><p>9)SELECT 对select子句进行处理<br>1 - 计算select子句的表达式<br>2 - 如果有 DISTINCT，则进行去重</p><p>10）ORDER BY-根据ORDER BY 子句的条件对结果进行排序<br><strong>唯一可使用SELECT中别名的地方</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    a.uid,</span><br><span class="line">    count(b.oid) AS total </span><br><span class="line">FROM</span><br><span class="line">    table1 AS a</span><br><span class="line">LEFT JOIN table2 AS b ON a.uid = b.uid</span><br><span class="line">WHERE</span><br><span class="line">    a. NAME = &apos;mike&apos;</span><br><span class="line">GROUP BY</span><br><span class="line">    a.uid</span><br><span class="line">HAVING</span><br><span class="line">    count(b.oid) &lt; 1</span><br><span class="line">ORDER BY</span><br><span class="line">    total DESC</span><br></pre></td></tr></table></figure><p>11) LIMIT-子句从上一步得到的虚拟表中选出从指定位置开始的指定行数据</p><h2 id="2-SQL中关联表on后面的条件与where后面条件有什么不同"><a href="#2-SQL中关联表on后面的条件与where后面条件有什么不同" class="headerlink" title="2 SQL中关联表on后面的条件与where后面条件有什么不同"></a>2 SQL中关联表on后面的条件与where后面条件有什么不同</h2><p>详细见上面的6</p><p>##3.同一个字段不同值的统计处理<br>查询一个用户有多少条年龄数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select  name,</span><br><span class="line"> sum(case when (old is not null)  then  1 else 0 end  ) &apos;个数&apos;</span><br><span class="line">from table1  a </span><br><span class="line">left  join table2 b on a.uid=b.uid </span><br><span class="line">group by a.name ;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MYSQL-SQL执行流程&quot;&gt;&lt;a href=&quot;#MYSQL-SQL执行流程&quot; class=&quot;headerlink&quot; title=&quot;MYSQL-SQL执行流程&quot;&gt;&lt;/a&gt;MYSQL-SQL执行流程&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-SQL的执行流程&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="MYSQL" scheme="https://tonywang1.github.io/categories/MYSQL/"/>
    
    
      <category term="MYSQL" scheme="https://tonywang1.github.io/tags/MYSQL/"/>
    
      <category term="SQL" scheme="https://tonywang1.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>CURL使用</title>
    <link href="https://tonywang1.github.io/2019/09/18/linux_curl/"/>
    <id>https://tonywang1.github.io/2019/09/18/linux_curl/</id>
    <published>2019-09-17T20:28:36.000Z</published>
    <updated>2019-09-25T03:18:29.977Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CURL使用"><a href="#CURL使用" class="headerlink" title="CURL使用"></a>CURL使用</h1><hr><h2 id="1-curl作用"><a href="#1-curl作用" class="headerlink" title="1.curl作用"></a>1.curl作用</h2><p>  　curl是一个利用URL规则在命令行下工作的文件传输工具</p><h2 id="2语法"><a href="#2语法" class="headerlink" title="2语法"></a>2语法</h2><p> curl [option] [url]</p><h2 id="3实例"><a href="#3实例" class="headerlink" title="3实例"></a>3实例</h2><ul><li>发送get、post请求-代码3.1<ul><li>发送带有参数的get和post请求 - 3.2 </li><li>查看请求的整个请求链路-调试谁用 - 3.3</li><li>发送带有header请求 - 4.4</li><li>发送设置host的请求 -4.4</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">代码3.1</span><br><span class="line">curl -i(返回头信息) -X POST/Get http//www.baidu.com</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">代码3.2</span><br><span class="line">- 发送applicationjson数据</span><br><span class="line">- curl -H &quot;Content-Type:application/json&quot; -X POST -d &apos;&#123;&quot;user&quot;: &quot;admin&quot;, &quot;passwd&quot;:&quot;12345678&quot;&#125;&apos; https://proxy.mimvp1.com/login</span><br><span class="line">- 普通数据提交</span><br><span class="line">- curl -d &quot;param1=value1&amp;param2=value2&quot; -H &quot;Content-Type: application/x-www-form-urlencoded&quot; -X POST http://localhost:3001/data</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">代码3.3</span><br><span class="line">curl  -X POST/Get http//www.baidu.com -xvo /usr/null</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">代码4.4</span><br><span class="line">curl  &apos;http://localhost/hadoop1/clusters/list?page=1&amp;pageSize=50&amp;total=0&amp;tokenId=tokenId_a218_4ab8_8404_3ac9a4b63d2c&apos; -H &apos;host:bd1prod.localhost.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CURL使用&quot;&gt;&lt;a href=&quot;#CURL使用&quot; class=&quot;headerlink&quot; title=&quot;CURL使用&quot;&gt;&lt;/a&gt;CURL使用&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-curl作用&quot;&gt;&lt;a href=&quot;#1-curl作用&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="LINUX" scheme="https://tonywang1.github.io/categories/LINUX/"/>
    
    
      <category term="LINUX" scheme="https://tonywang1.github.io/tags/LINUX/"/>
    
      <category term="CURL" scheme="https://tonywang1.github.io/tags/CURL/"/>
    
  </entry>
  
  <entry>
    <title>RESOURCE插件说明</title>
    <link href="https://tonywang1.github.io/2019/09/18/maven_plugin_resource/"/>
    <id>https://tonywang1.github.io/2019/09/18/maven_plugin_resource/</id>
    <published>2019-09-17T20:28:36.000Z</published>
    <updated>2019-09-24T08:20:15.479Z</updated>
    
    <content type="html"><![CDATA[<p>#RESOURCE插件说明</p><p>##1插件说明</p><ul><li><a href="http://maven.apache.org/plugins/maven-resources-plugin/resources-mojo.html" target="_blank" rel="noopener">官方说明</a></li><li>resources:resources标签全名为org.apache.maven.plugins:maven-resources-plugin:3.1.0:resources<br>即plugin中配置的资源的插件和resource标签的是同样的东西</li><li>资源插件会拷贝对应的资源根据resource标签的设置</li></ul><p>##2插件种类<br>Resources插件目标有三个，主要的不同点在于：拷贝资源中的一些默认值和文件的输出目录不同 </p><ul><li>resources:resources:拷贝main resources到main output directory,它绑定了process-resources生命周期阶段，当执行Compiler:compile插件目标前就会自动执行此阶段。</li><li>resources:testResources：拷贝test resources到test output directory，它绑定了process-test-resources生命周期阶段，当执行surefire:test插件目标前就会执行此阶段</li><li>resources:copy-resources：需要自己手动配置去拷贝文件，拷贝资源去输出目录。</li></ul><p>##3为什么要有resource插件<br>项目中文件通常有两种：</p><ul><li>1 需要编译的java文件 </li><li>2 不需要编译的资源文件 </li></ul><p>这两种文件通过不同的插件分别处理，其中第二种资源文件就是需要resource插件处理</p><p>##4resource插件能解决什么问题？</p><ul><li>资源文件拷贝目录的设置 - 代码4.2</li><li>插件读取配置的编码情况 - 代码4.1</li><li>过滤器的设置 - 代码4.3</li><li>精确控制资源拷贝- 代码4.4</li><li>排除过滤 - 代码4.5</li><li>copy-resources</li><li>主目录中某些资源的拷贝 - 代码4.6</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">代码4.1</span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">代码4.2</span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources1<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources2<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">代码4.3</span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span>filter-values.properties<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">代码4.4</span><br><span class="line">  <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.txt<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.rtf<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.bmp<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.jpg<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.jpeg<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.gif<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">代码4.5</span><br><span class="line"><span class="comment">&lt;!-- 过滤后缀为pdf和swf的文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>pdf<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>swf<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">代码4.6</span><br><span class="line">  <span class="comment">&lt;!-- 资源目录 --&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span>    </span><br><span class="line">        <span class="comment">&lt;!-- 设定主资源目录  --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，只处理如下配置中包含的资源类型 --&gt;</span>     </span><br><span class="line"> <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">includes</span>&gt;</span>  </span><br><span class="line">             </span><br><span class="line">        <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，不处理如下配置中包含的资源类型（剔除下如下配置中包含的资源类型）--&gt;</span>      </span><br><span class="line"><span class="tag">&lt;<span class="name">excludes</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.yaml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">excludes</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，指定处理后的资源文件输出目录，默认是$&#123;build.outputDirectory&#125;指定的目录--&gt;</span>      </span><br><span class="line">        <span class="comment">&lt;!--&lt;targetPath&gt;$&#123;build.outputDirectory&#125;&lt;/targetPath&gt; --&gt;</span>      </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，是否对主资源目录开启资源过滤 --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#RESOURCE插件说明&lt;/p&gt;
&lt;p&gt;##1插件说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://maven.apache.org/plugins/maven-resources-plugin/resources-mojo.html&quot; target=&quot;_b
      
    
    </summary>
    
      <category term="MAVEN" scheme="https://tonywang1.github.io/categories/MAVEN/"/>
    
    
      <category term="MAVEN" scheme="https://tonywang1.github.io/tags/MAVEN/"/>
    
  </entry>
  
  <entry>
    <title>cron使用</title>
    <link href="https://tonywang1.github.io/2019/09/18/linux_cron/"/>
    <id>https://tonywang1.github.io/2019/09/18/linux_cron/</id>
    <published>2019-09-17T20:28:36.000Z</published>
    <updated>2019-09-25T06:21:48.816Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CRON使用"><a href="#CRON使用" class="headerlink" title="CRON使用"></a>CRON使用</h1><hr><h2 id="1-什么是cron表达式"><a href="#1-什么是cron表达式" class="headerlink" title="1.什么是cron表达式"></a>1.什么是cron表达式</h2><p>  Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式</p><h2 id="2-基本语法"><a href="#2-基本语法" class="headerlink" title="2 基本语法"></a>2 基本语法</h2><p>corn从左到右（用空格隔开）：秒 分 小时 月份中的日期 月份 星期中的日期 年份</p><h2 id="3-基本语法中字段含义"><a href="#3-基本语法中字段含义" class="headerlink" title="3 基本语法中字段含义"></a>3 基本语法中字段含义</h2><table><thead><tr><th>字段</th><th align="right">允许值</th><th align="center">允许的特殊字符</th></tr></thead><tbody><tr><td>秒（Seconds）</td><td align="right">0~59的整数</td><td align="center">, - * /    四个字符</td></tr><tr><td>分（Minutes）</td><td align="right">0~59的整数</td><td align="center">, - * /    四个字符</td></tr><tr><td>小时（Hours）</td><td align="right">0~23的整数</td><td align="center">, - * /    四个字符</td></tr><tr><td>日期（DayofMonth）</td><td align="right">1~31的整数（但是你需要考虑你月的天数）</td><td align="center">,- * ? / L W C     八个字符</td></tr><tr><td>月份（Month）</td><td align="right">1~12的整数或者 JAN-DEC</td><td align="center">, - * /    四个字符</td></tr><tr><td>星期（DayofWeek）</td><td align="right">1~7的整数或者 SUN-SAT （1=SUN）</td><td align="center">, - * ? / L C #     八个字符</td></tr><tr><td>年(可选，留空)（Year）</td><td align="right">1970~2099</td><td align="center">, - * /    四个字符</td></tr></tbody></table><p>（1）*：表示匹配该域的任意值。假如在Minutes域使用*, 即表示每分钟都会触发事件。</p><p>　　（2）?：只能用在DayofMonth和DayofWeek两个域。它也匹配域的任意值，但实际不会。因为DayofMonth和DayofWeek会相互影响。例如想在每月的20日触发调度，不管20日到底是星期几，则只能使用如下写法： 13 13 15 20 * ?, 其中最后一位只能用？，而不能使用<em>，如果使用</em>表示不管星期几都会触发，实际上并不是这样。</p><p>　　（3）-：表示范围。例如在Minutes域使用5-20，表示从5分到20分钟每分钟触发一次 </p><p>　　（4）/：表示起始时间开始触发，然后每隔固定时间触发一次。例如在Minutes域使用5/20,则意味着5分钟触发一次，而25，45等分别触发一次. </p><p>　　（5）,：表示列出枚举值。例如：在Minutes域使用5,20，则意味着在5和20分每分钟触发一次。 </p><p>　　（6）L：表示最后，只能出现在DayofWeek和DayofMonth域。如果在DayofWeek域使用5L,意味着在最后的一个星期四触发。 </p><p>　　（7）W:表示有效工作日(周一到周五),只能出现在DayofMonth域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth使用5W，如果5日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份 。</p><p>　　（8）LW:这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。 </p><p>　　（9）#:用于确定每个月第几个星期几，只能出现在DayofMonth域。例如在4#2，表示某月的第二个星期三。　　</p><h2 id="4-常用样例"><a href="#4-常用样例" class="headerlink" title="4 常用样例"></a>4 常用样例</h2><p>（1）0 0 2 1 * ? *   表示在每月的1日的凌晨2点调整任务<br>（2）0 15 10 ? * MON-FRI   表示周一到周五每天上午10:15执行作业<br>（3）0 15 10 ? 6L 2002-2006   表示2002-2006年的每个月的最后一个星期五上午10:15执行作<br>（4）0 0 10,14,16 * * ?   每天上午10点，下午2点，4点<br>（5）0 0/30 9-17 * * ?   朝九晚五工作时间内每半小时<br>（6）0 0 12 ? * WED    表示每个星期三中午12点<br>（7）0 0 12 * * ?   每天中午12点触发<br>（8）0 15 10 ? * *    每天上午10:15触发<br>（9）0 15 10 * * ?     每天上午10:15触发<br>（10）0 15 10 * * ? *    每天上午10:15触发<br>（11）0 15 10 * * ? 2005    2005年的每天上午10:15触发<br>（12）0 * 14 * * ? 在每天下午2点到下午2:59期间的每1分钟触发 （13）0 0/5 14 * * ? 在每天下午2点到下午2:55期间的每5分钟触发<br>（14）0 0/5 14,18 * * ?     在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发<br>（15）0 0-5 14 * * ?    在每天下午2点到下午2:05期间的每1分钟触发<br>（16）0 10,44 14 ? 3 WED    每年三月的星期三的下午2:10和2:44触发<br>（17）0 15 10 ? * MON-FRI    周一至周五的上午10:15触发<br>（18）0 15 10 15 * ?    每月15日上午10:15触发<br>（19）0 15 10 L * ?    每月最后一日的上午10:15触发<br>（20）0 15 10 ? * 6L    每月的最后一个星期五上午10:15触发<br>（21）0 15 10 ? * 6L 2002-2005   2002年至2005年的每月的最后一个星期五上午10:15触发<br>（22）0 15 10 ? * 6#3   每月的第三个星期五上午10:15触发<br>（23）*/5 * * * * ? 每5秒执行一次<br>（24）0 */1 * * * ? 每隔一分钟执行一次<br>（25）0 1 * * * ?  每个小时的1分钟执行一次，如1点1分、2点1分<br>（26）0 0 1 * * ? 每天零晨1点执行<br>（26）0 0 2 * * ? 每天零晨2点执行<br>（27）0 0 1 20 * ? 每个月20日零晨1点执行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CRON使用&quot;&gt;&lt;a href=&quot;#CRON使用&quot; class=&quot;headerlink&quot; title=&quot;CRON使用&quot;&gt;&lt;/a&gt;CRON使用&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-什么是cron表达式&quot;&gt;&lt;a href=&quot;#1-什么是cron表达式&quot; class=
      
    
    </summary>
    
      <category term="LINUX" scheme="https://tonywang1.github.io/categories/LINUX/"/>
    
    
      <category term="LINUX" scheme="https://tonywang1.github.io/tags/LINUX/"/>
    
      <category term="CRON" scheme="https://tonywang1.github.io/tags/CRON/"/>
    
  </entry>
  
  <entry>
    <title>深入字节</title>
    <link href="https://tonywang1.github.io/2019/09/11/lean_byte/"/>
    <id>https://tonywang1.github.io/2019/09/11/lean_byte/</id>
    <published>2019-09-10T20:32:15.000Z</published>
    <updated>2019-09-17T07:36:10.853Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深入了解字节"><a href="#深入了解字节" class="headerlink" title="深入了解字节"></a>深入了解字节</h1><hr><h2 id="1-为什么要写字节这个东东"><a href="#1-为什么要写字节这个东东" class="headerlink" title="1.为什么要写字节这个东东"></a>1.为什么要写字节这个东东</h2><blockquote><ul><li>做JAVA项目的时候总会碰到读写字节的过程</li><li>经常有字符串和字节互相转化的过程</li><li>每次只是知道怎么做，但是不知道为什么这样做</li></ul></blockquote><p>希望经过这篇文章整理，彻底了解这个字节以及字节和用户输入文字之间的关系。</p><h2 id="2-了解一下具体什么是字节"><a href="#2-了解一下具体什么是字节" class="headerlink" title="2. 了解一下具体什么是字节"></a>2. 了解一下具体什么是字节</h2><p> 在编程的时候总会遇到字节数组，如读取一个文件时候多个字节一起读、Socket的网络编程的时候读取数据也是按照字节读取的，总会思考这个字节是什么？</p><blockquote><p>答案：字节实际上就是我们在换算单位时候用到的byte，一个byte=8位（八个0、1组成的一串二进制的数字）</p></blockquote><h2 id="3-在java中字符串是如何转化为字节的"><a href="#3-在java中字符串是如何转化为字节的" class="headerlink" title="3. 在java中字符串是如何转化为字节的"></a>3. 在java中字符串是如何转化为字节的</h2><p>计算机起源美国 <code>-&gt;</code> 美国使用英语 <code>-&gt;</code> 英语（数字、大小写字母、控制字符标点符号、运算字符等组成） <code>-&gt;</code> 8位二进制数（共255个）表示所有字符<br>即：你每次输入一个字符-计算机会到对照表中查找对应的值(二进制、十进制) <code>-&gt;</code> 二进制就可以被计算机识别<br>到此计算机可以识别人类输入的所有英文字符 <code>-&gt;</code> 即字符到二进制的转换</p><blockquote><p>问题出现 <code>-&gt;</code> 非英语字符通过对照表找不到对应的值，就不能识别如何处理对应的字符，如：输入中文“您”，到对照表中找不到，计算机就不认识。<br>那么，就需要有其他的对照表出现：即gb2312、gbk、utf-8等</p></blockquote><p><strong><em>一个中文转换成字符的过程是怎么样子的？</em></strong></p><blockquote><ul><li>字符：‘我’-utf-8编码-&gt;BDE4-&gt;251059（十进制）-&gt;6211（十六进制）<code>-&gt;</code> 1100111011010010 (二进制)</li></ul></blockquote><blockquote><ul><li>‘中’-&gt;对应的Unicode表的值4E2D（十六进制）（java使用Unicode编码）-&gt;对应的二进制100111000101101-&gt;utf-8填充规则转换-&gt;11100100  10111000 10101101 </li><li>UTF-8最多可用到6个字节则二进制变为100 111000 101101一共3个部分<br><a href="https://blog.csdn.net/liuwenjie517333813/article/details/68060904" target="_blank" rel="noopener">参考链接</a></li></ul></blockquote><h2 id="4-对于计算机的深入思考"><a href="#4-对于计算机的深入思考" class="headerlink" title="4. 对于计算机的深入思考"></a>4. 对于计算机的深入思考</h2><p>计算机终究只认识两个东西0、1,但是计算机要处理的是人类的输入并且最后要输出的东西也是要给人类使用的，这时候计算机要处理以下问题</p><ol><li>接受人类输入的文字</li><li>把字符转化为自己能识别的0和1</li><li>对转化过的数据进行二进制之间的计算</li><li>对最终的计算结果进行编码成为用户可见的文字并呈现给使用者</li></ol><blockquote><p>其中把人类输入文字转换为0和1,和最终转换为用户可见的文字过程需要使用字符编码</p><ul><li>解码:计算机识别的对应编码的二进制数字，按照编码格式转化为统一的编码格式，然后到编码表中找到对应的文字</li><li>编码：文字根据编码表找到对应的数值，然后转换为UNIQUE编码的二进制，在转换为工程对应的编码的二进制格式数据</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;深入了解字节&quot;&gt;&lt;a href=&quot;#深入了解字节&quot; class=&quot;headerlink&quot; title=&quot;深入了解字节&quot;&gt;&lt;/a&gt;深入了解字节&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-为什么要写字节这个东东&quot;&gt;&lt;a href=&quot;#1-为什么要写字节这个东东&quot; clas
      
    
    </summary>
    
      <category term="JAVA" scheme="https://tonywang1.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://tonywang1.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>一次读取配置文件的探究</title>
    <link href="https://tonywang1.github.io/2019/09/10/read_config/"/>
    <id>https://tonywang1.github.io/2019/09/10/read_config/</id>
    <published>2019-09-09T17:51:03.000Z</published>
    <updated>2019-09-10T12:16:35.565Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一次读取配置文件的探究"><a href="#一次读取配置文件的探究" class="headerlink" title="一次读取配置文件的探究"></a>一次读取配置文件的探究</h1><hr><h2 id="1-问题的获取"><a href="#1-问题的获取" class="headerlink" title="1. 问题的获取"></a>1. <em>问题的获取</em></h2><blockquote><p>用App.class.getResourceAsStream(fileName)找不到配置文件，然后去看了一遍源码，发现App.class.getClassLoader().getResourceAsStream代码是有区别的，整理如下：</p></blockquote><h2 id="2-class-getResourceAsStream-fileName-说明"><a href="#2-class-getResourceAsStream-fileName-说明" class="headerlink" title="2. class.getResourceAsStream(fileName)说明"></a>2. class.getResourceAsStream(fileName)说明</h2><blockquote><ul><li>相对路径：如果fileName不是用“/”开头的，则程序会找到Test这个类对应的目录去查找filename类</li><li>绝对路径：如果fileName用“/”开头的，则程序会直接从根目录查找对应的文件去加载 </li><li>详细可以查看源码Class.java 中方法getResourceAsStream</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">具体为Class 中的 getResourceAsStream中的方法可以查看详细：</span><br><span class="line">resolveName(name)</span><br></pre></td></tr></table></figure><h2 id="3-classLoader-getResourceAsStream"><a href="#3-classLoader-getResourceAsStream" class="headerlink" title="3.classLoader.getResourceAsStream()"></a>3.classLoader.getResourceAsStream()</h2><blockquote><ul><li>是从类的根目录查找对应的文件，与当前的类路径无关</li><li>class中读取配置文件的方法也调用的这个方法</li><li>寻找资源文件的时候调用ClassLoader中方法getResource查找</li><li>具体查找文件方式为类加载器的双亲委托机制</li></ul></blockquote><h2 id="4-ClassLoader查找文件规则双亲委托模型相关"><a href="#4-ClassLoader查找文件规则双亲委托模型相关" class="headerlink" title="4. ClassLoader查找文件规则双亲委托模型相关"></a>4. ClassLoader查找文件规则<strong>双亲委托模型</strong>相关</h2><ol><li>从根类加载器关联的路径找对应的文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根类加载器对应的文件路径：String bootClassPath = System.getProperty(&quot;sun.boot.class.path&quot;);</span><br></pre></td></tr></table></figure></li></ol><p>2 . 从扩展类加载器查找文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">扩展类加载器对应路径：System.out.println(&quot;ext:&quot;+System.getProperty(&quot;java.ext.dirs&quot;));</span><br></pre></td></tr></table></figure><p>3 . 从应用类加载器-这部分包括我们自己项目的目录下所有的jar包和文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(&quot;app:&quot;+System.getProperty(&quot;java.class.path&quot;));</span><br></pre></td></tr></table></figure><h2 id="5-那么三种加载器的属性文件在哪里设置的呢？"><a href="#5-那么三种加载器的属性文件在哪里设置的呢？" class="headerlink" title="5. 那么三种加载器的属性文件在哪里设置的呢？"></a>5. 那么三种加载器的属性文件在哪里设置的呢？</h2><p>   所有系统属性可以通过下面的代码获取到，但是具体在什么地方设置的一直没有找到，留到以后探究吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打印java所有的系统环境变量：java.util.Properties properties = System.getProperties();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一次读取配置文件的探究&quot;&gt;&lt;a href=&quot;#一次读取配置文件的探究&quot; class=&quot;headerlink&quot; title=&quot;一次读取配置文件的探究&quot;&gt;&lt;/a&gt;一次读取配置文件的探究&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;1-问题的获取&quot;&gt;&lt;a href=&quot;#1-问题的
      
    
    </summary>
    
      <category term="JAVA" scheme="https://tonywang1.github.io/categories/JAVA/"/>
    
    
      <category term="JAVA" scheme="https://tonywang1.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>Github上创建自己的网站</title>
    <link href="https://tonywang1.github.io/2019/08/31/gen_github_page/"/>
    <id>https://tonywang1.github.io/2019/08/31/gen_github_page/</id>
    <published>2019-08-30T17:51:03.000Z</published>
    <updated>2019-08-30T10:54:32.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github搭建自己的博客"><a href="#Github搭建自己的博客" class="headerlink" title="Github搭建自己的博客"></a>Github搭建自己的博客</h1><hr><h2 id="为什么要搭建自己的博客"><a href="#为什么要搭建自己的博客" class="headerlink" title="为什么要搭建自己的博客"></a><em>为什么要搭建自己的博客</em></h2><blockquote><ul><li>探索未知世界</li><li>记录自己的成长</li><li>为后来者提供借鉴</li><li>梳理自己的逻辑思维</li><li>整理自己的学习知识，方便以后查阅</li></ul></blockquote><h2 id="1-github-page是什么？"><a href="#1-github-page是什么？" class="headerlink" title="1. github page是什么？"></a>1. github page是什么？</h2><blockquote><p>　　GitHub页面是一种静态网站托管服务，旨在直接从GitHub存储库托管个人、组织或项目页面。</p></blockquote><p><a href="https://help.github.com/en/categories/github-pages-basics" target="_blank" rel="noopener">Github Page官方详细</a></p><h2 id="2-hexo是什么？"><a href="#2-hexo是什么？" class="headerlink" title="2. hexo是什么？"></a>2. hexo是什么？</h2><ul><li>简单、快速、强大的Node.js静态博客框架</li><li><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">hexo源码</a></li><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官方网站</a></li></ul><h2 id="3-github-page的设置"><a href="#3-github-page的设置" class="headerlink" title="3. github page的设置"></a>3. github page的设置</h2><ul><li><a href="https://help.github.com/en/articles/configuring-a-publishing-source-for-github-pages" target="_blank" rel="noopener">设置GitHubPage</a></li></ul><h3 id="个人操作借鉴-（详细请参考上文超链接）"><a href="#个人操作借鉴-（详细请参考上文超链接）" class="headerlink" title="个人操作借鉴 （详细请参考上文超链接）"></a>个人操作借鉴 （详细请参考上文超链接）</h3><blockquote><ul><li>创建一个repository，名称为（<strong>用户名</strong> + .github.io ）括号中的以后是你博客的默认域名</li><li>切换tab到setting，并设置Repository name</li></ul></blockquote><h2 id="4-nodejs、hexo安装，git安装"><a href="#4-nodejs、hexo安装，git安装" class="headerlink" title="4. nodejs、hexo安装，git安装"></a>4. nodejs、hexo安装，git安装</h2><p>nodejs的安装，直接百度就可以搜索到，直接下载安装非常简单<br>git安装<br><a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90" target="_blank" rel="noopener">hexo安装参考</a></p><h2 id="5-创建、清理、发布、启动服务、本地访问"><a href="#5-创建、清理、发布、启动服务、本地访问" class="headerlink" title="5. 创建、清理、发布、启动服务、本地访问"></a>5. 创建、清理、发布、启动服务、本地访问</h2><p><a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">文档地址</a></p><ol><li>创建静态站点 <code>hexo init</code></li><li>创建一个文章 <code>hexo new [layout] &lt;title&gt;</code></li><li>生成静态文件 <code>hexo generate</code></li><li>启动服务 <code>hexo server</code></li><li>部署网站 <code>hexo deploy</code></li><li>清除缓存和生成的静态文件 <code>hexo clean</code></li><li>项目本地启动以后可以访问 <code>http://localhost:4000/</code></li></ol><h2 id="6-步骤5中创建的项目与Git关联并上传到git仓库"><a href="#6-步骤5中创建的项目与Git关联并上传到git仓库" class="headerlink" title="6. 步骤5中创建的项目与Git关联并上传到git仓库"></a>6. 步骤5中创建的项目与Git关联并上传到git仓库</h2><blockquote><ul><li><code>git init</code></li><li><code>git add .</code></li><li><code>git commit &#39;评论&#39;</code></li><li>本地项目关联到git上：<code>git remote add origin &lt;server&gt;</code></li></ul></blockquote><h2 id="7-更换主题"><a href="#7-更换主题" class="headerlink" title="7. 更换主题"></a>7. 更换主题</h2><ol><li>到 <a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">主题源码</a> 页面fork源码到我们自己git上</li><li><a href="https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">主题安装</a> 点击查看文档</li><li>修改配置文件（_config.yml）添加 theme: indigo指定主题</li></ol><p><a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener"> 我用的indigo主题源码</a></p><h2 id="8-hexo选择修改语言类型"><a href="#8-hexo选择修改语言类型" class="headerlink" title="8. hexo选择修改语言类型"></a>8. hexo选择修改语言类型</h2><p> 现在项目还是英文的，需要修改项目的语言为中文<br> 修改配置文件（_config.yml）中  <code>language: zh-CN</code></p><h2 id="6-hexo布局的使用"><a href="#6-hexo布局的使用" class="headerlink" title="6. hexo布局的使用"></a>6. hexo布局的使用</h2><blockquote><ul><li>scaffolds文件夹中有3个文件分别为draft.md、page.md、post.md<br>分别对应草稿、page格式、post格式的文件模板</li><li>命令 <code>hexo new [layout] &lt;title&gt;</code>  中的layout取值为：draft、page、post</li><li>三个文件中的<strong>Front-matter</strong>中可以放一些变量在里面，以便生成静态页面的时候可以使用</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">这里是我自己搭建项目的模板 其中urlname这个变量设置以后生成的静态文件路径上会使用</span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">urlname: </span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="7-hexo生成静态页面的目录的设置"><a href="#7-hexo生成静态页面的目录的设置" class="headerlink" title="7. hexo生成静态页面的目录的设置"></a>7. hexo生成静态页面的目录的设置</h2><p>配置文件_config.yml中设置下面的<strong>permalink</strong>参数，生成静态页面的访问路径，会根据<strong>Front-matter</strong>中的变量设置参数<br><code>permalink: :year/:month/:day/:urlname/</code></p><h2 id="8-hexo标签和分类的使用，以及标签和分类区别"><a href="#8-hexo标签和分类的使用，以及标签和分类区别" class="headerlink" title="8. hexo标签和分类的使用，以及标签和分类区别"></a>8. hexo标签和分类的使用，以及标签和分类区别</h2><h3 id="分类生成及使用"><a href="#分类生成及使用" class="headerlink" title="分类生成及使用"></a>分类生成及使用</h3><blockquote><ul><li>打开命令行，进入博客所在文件夹。执行命令<br><code>hexo new page categories</code></li><li>会生成一个文件 ，/categories/index.md</li><li>修改分类中的设置如下，有的版本使用type有的版本使用layout变量  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2019-08-29 15:48:13</span><br><span class="line">comments: false</span><br><span class="line">type: categories</span><br><span class="line">layout: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>写文章的收需要加上 categories: “文章标签名称”</li><li>原理：hexo 会找到<code>layout: categories</code>的设置，然后搜索所有文章中有categories设置的分类，生成分类列表</li></ul></blockquote><h3 id="标签生成及使用"><a href="#标签生成及使用" class="headerlink" title="标签生成及使用"></a>标签生成及使用</h3><p>操作： </p><blockquote><ul><li>打开命令行，进入博客所在文件夹。执行命令`hexo new page tags </li><li>下面的设置和categories一样了 </li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Github搭建自己的博客&quot;&gt;&lt;a href=&quot;#Github搭建自己的博客&quot; class=&quot;headerlink&quot; title=&quot;Github搭建自己的博客&quot;&gt;&lt;/a&gt;Github搭建自己的博客&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;为什么要搭建自己的博客&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="Github" scheme="https://tonywang1.github.io/categories/Github/"/>
    
    
      <category term="Github" scheme="https://tonywang1.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>test1</title>
    <link href="https://tonywang1.github.io/2019/08/29/index/"/>
    <id>https://tonywang1.github.io/2019/08/29/index/</id>
    <published>2019-08-29T10:28:45.000Z</published>
    <updated>2019-08-29T02:28:45.788Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test10</title>
    <link href="https://tonywang1.github.io/2019/08/29/index/"/>
    <id>https://tonywang1.github.io/2019/08/29/index/</id>
    <published>2019-08-29T10:27:50.000Z</published>
    <updated>2019-08-30T06:28:44.938Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://tonywang1.github.io/2019/08/28/index/"/>
    <id>https://tonywang1.github.io/2019/08/28/index/</id>
    <published>2019-08-28T07:50:32.729Z</published>
    <updated>2019-08-28T07:50:32.729Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
